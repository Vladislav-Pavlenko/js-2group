{"mappings":"AAAO,MAAMA,EAAO,CAClBC,KAAMC,SAASC,cAAc,cAC7BC,KAAMF,SAASC,cAAc,eCAxB,IAkBIE,EAAS,CAACC,EAAO,MAC1B,IAAIC,EAAK,GACLC,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWL,IAClD,KAAOA,KACLC,GCvBF,mEDuBwC,GAAdC,EAAMF,IAEhC,OAAOC,CAAE,EEzBJ,SAASK,EAAWC,GACzB,MAAMC,EAAW,CAAEP,GAAIF,KAIvB,OAHA,IAAIU,SAASF,EAAMG,eAAeC,SAAQ,CAACC,EAAOC,KAChDL,EAASK,GAAOD,CAAK,IAEhBJ,C,CCET,SAASM,IACP,OAAOC,KAAKC,MAAMC,aAAaC,QATrB,WASsC,E,CAU3C,MAAMC,EAAkB,C,IAjB/B,SAAaX,GACX,MAAMY,EAAaN,IACnBM,EAAWC,KAAKb,GAChBS,aAAaK,QALH,QAKgBP,KAAKQ,UAAUH,G,SAgBzCN,E,WATF,SAAoBb,GAClB,MACMuB,EADaL,EAAgBM,SACJC,QAAOC,GAAQA,EAAK1B,KAAOA,IAE1D,OADAgB,aAAaK,QAfH,QAegBP,KAAKQ,UAAUC,IAClCA,C,GChBF,SAASI,EAAiBpB,GAC/B,MAAO,sDACeA,EAASP,6DACrBO,EAASqB,0BACXrB,EAASsB,0B,CCoBnBpC,EAAKC,KAAKoC,iBAAiB,UAAUxB,IACnCA,EAAMyB,iBACN,MAAMxB,EAAWF,EAAWC,GAC5BY,EAAgBc,IAAIzB,GACpB,MAAM0B,EAASN,EAAiBpB,GAChCd,EAAKI,KAAKqC,mBAAmB,YAAaD,EAAO,ICzB5C,WACL,MACMA,EADQf,EAAgBM,SACTW,IAAIR,GAAkBS,KAAK,IAChD3C,EAAKI,KAAKqC,mBAAmB,YAAaD,E,CDyB5C,GAEAxC,EAAKI,KAAKiC,iBAAiB,SE9BpB,SAAoBxB,GACzB,GAA8B,WAA1BA,EAAM+B,OAAOC,SACf,OAEFC,QAAQC,IAAIlC,EAAM+B,QAClB,MAAMrC,EAAKM,EAAM+B,OAAOI,QAAQzC,GAC1B0C,EAAcxB,EAAgByB,WAAW3C,GAC/CP,EAAKI,KAAK+C,UAAYF,EAAYP,IAAIR,GAAkBS,KAAK,G","sources":["src/js/refs.js","node_modules/nanoid/index.browser.js","node_modules/nanoid/url-alphabet/index.js","src/js/create-task.js","src/js/localstorage-api.js","src/js/create-task-markup.js","src/index.js","src/js/render-tasks.js","src/js/delete-task.js"],"sourcesContent":["export const refs = {\n  form: document.querySelector('#task-form'),\n  list: document.querySelector('#task-list'),\n};\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { nanoid } from 'nanoid';\nexport function createTask(event) {\n  const formTask = { id: nanoid() };\n  new FormData(event.currentTarget).forEach((value, key) => {\n    formTask[key] = value;\n  });\n  return formTask;\n}\n","const KEY = 'tasks';\n\nfunction add(formTask) {\n  const tasksArray = getAll();\n  tasksArray.push(formTask);\n  localStorage.setItem(KEY, JSON.stringify(tasksArray));\n}\n\nfunction getAll() {\n  return JSON.parse(localStorage.getItem(KEY)) || [];\n}\n\nfunction deleteTask(id) {\n  const tasksArray = localStorageApi.getAll();\n  const updateTasks = tasksArray.filter(item => item.id !== id);\n  localStorage.setItem(KEY, JSON.stringify(updateTasks));\n  return updateTasks;\n}\n\nexport const localStorageApi = {\n  add,\n  getAll,\n  deleteTask,\n};\n","export function createTaskMarkup(formTask) {\n  return `<li class=\"task-list-item\">\n     <button data-id=\"${formTask.id}\" class=\"task-list-item-btn\">Delete</button>\n      <h3>${formTask.taskName}</h3>\n     <p>${formTask.taskText}</p>\n     </li>`;\n}\n","/**\n * Створи список справ.\n * На сторінці є два інпути які має вводиться назва і текст задачі.\n * Після натискання на кнопку \"Додати\" завдання додається до списку #task-list.\n *\n * Розмітка картки задачі\n * <li class=\"task-list-item\">\n *     <button class=\"task-list-item-btn\">Удалить</button>\n *     <h3>Заголовок</h3>\n *     <p>Текст</p>\n * </li>\n *\n * У кожної картки має бути кнопка \"Видалити\", щоб можна було\n * прибрати завдання зі списку.\n * Список із завданнями має бути доступним після перезавантаження сторінки.\n */\n\nimport { refs } from './js/refs';\nimport { createTask } from './js/create-task';\nimport { localStorageApi } from './js/localstorage-api';\nimport { createTaskMarkup } from './js/create-task-markup';\nimport { renderTasks } from './js/render-tasks';\nimport { deleteTask } from './js/delete-task';\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n  const formTask = createTask(event);\n  localStorageApi.add(formTask);\n  const markup = createTaskMarkup(formTask);\n  refs.list.insertAdjacentHTML('beforeend', markup);\n});\n\nrenderTasks();\n\nrefs.list.addEventListener('click', deleteTask);\n","import { createTaskMarkup } from './create-task-markup';\nimport { refs } from './refs';\nimport { localStorageApi } from './localstorage-api';\n\nexport function renderTasks() {\n  const tasks = localStorageApi.getAll();\n  const markup = tasks.map(createTaskMarkup).join('');\n  refs.list.insertAdjacentHTML('beforeend', markup);\n}\n","import { createTaskMarkup } from './create-task-markup';\nimport { localStorageApi } from './localstorage-api';\nimport { refs } from './refs';\n\nexport function deleteTask(event) {\n  if (event.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  console.log(event.target);\n  const id = event.target.dataset.id;\n  const tasksUpdate = localStorageApi.deleteTask(id);\n  refs.list.innerHTML = tasksUpdate.map(createTaskMarkup).join('');\n}\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","form","document","querySelector","list","$cf399e049a9c4d34$export$ac4959f4f1338dfc","size","id","bytes","crypto","getRandomValues","Uint8Array","$99023faf49ffd76f$export$f7292ab7796be73c","event","formTask","FormData","currentTarget","forEach","value","key","$d571fd7366df672b$var$getAll","JSON","parse","localStorage","getItem","$d571fd7366df672b$export$1d9a30f00e78c7c3","tasksArray","push","setItem","stringify","updateTasks","getAll","filter","item","$8ac000493fc953f6$export$5abcd3dce68fbf9a","taskName","taskText","addEventListener","preventDefault","add","markup","insertAdjacentHTML","map","join","target","nodeName","console","log","dataset","tasksUpdate","deleteTask","innerHTML"],"version":3,"file":"index.48ef8a53.js.map"}